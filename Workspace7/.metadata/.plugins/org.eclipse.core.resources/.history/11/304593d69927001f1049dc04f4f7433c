package co.edu.uco.deviucopay.controller;

import org.springframework.http.HttpStatus;
import org.springframework.http.ResponseEntity;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RestController;
import co.edu.uco.deviucopay.business.facade.impl.institucion.ConsultarInstitucionFacade;
import co.edu.uco.deviucopay.business.facade.impl.institucion.RegistrarInstitucionFacade;
import co.edu.uco.deviucopay.controller.response.InstitucionResponse;
import co.edu.uco.deviucopay.crosscutting.exceptions.DeviUcopayException;
import co.edu.uco.deviucopay.crosscutting.exceptions.messageCatalog.MessageCatalogStrategy;
import co.edu.uco.deviucopay.crosscutting.exceptions.messageCatalog.data.CodigoMensaje;
import co.edu.uco.deviucopay.dto.InstitucionDTO;


@RestController
@RequestMapping("/institucion")
public class InstitucionController {
	
	@GetMapping
	public ResponseEntity<InstitucionResponse> consultar(){
		
		var httpStatusCode = HttpStatus.ACCEPTED;
		var institucionResponse = new InstitucionResponse();
		
		try {
			var institucionDto = InstitucionDTO.build();
			var facade = new ConsultarInstitucionFacade();
			
			institucionResponse.setDatos(facade.execute(institucionDto));
			institucionResponse.getMensajes().add(MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00044));
			
		}catch(final DeviUcopayException excepcion) {
			httpStatusCode = HttpStatus.BAD_REQUEST;
			institucionResponse.getMensajes().add(excepcion.getMensajeUsuario());
			excepcion.printStackTrace();
		}catch(final Exception excepcion) {
			httpStatusCode = HttpStatus.INTERNAL_SERVER_ERROR;
			
			var mensajeUsuario = MessageCatalogStrategy.getContenidoMensaje(CodigoMensaje.M00033);
			institucionResponse.getMensajes().add(mensajeUsuario);
			
			excepcion.printStackTrace();
		}
		
		return new ResponseEntity<>(institucionResponse,httpStatusCode);
	}

	@PostMapping("/registrar");
    public ResponseEntity<InstitucionResponse> crearInstitucion(@RequestBody InstitucionDTO institucion) {
        var httpStatusCode = HttpStatus.ACCEPTED;
        var institucionResponse = new InstitucionResponse();

        try {
            var facade = new RegistrarInstitucionFacade();
            facade.execute(institucion); 
            institucionResponse.getMensajes().add("Institucion creada exitosamente");
        } catch (final DeviUcopayException excepcion) {
            httpStatusCode = HttpStatus.BAD_REQUEST;
            institucionResponse.getMensajes().add(excepcion.getMensajeUsuario());
            excepcion.printStackTrace();
        } catch (final Exception excepcion) {
            httpStatusCode = HttpStatus.INTERNAL_SERVER_ERROR;
            var mensajeUsuario = "Se ha presentado un problema tratando de registar la nueva Institucion";
            institucionResponse.getMensajes().add(mensajeUsuario);
            excepcion.printStackTrace();
        }

        return new ResponseEntity<>(institucionResponse, httpStatusCode);
    }
  
}
