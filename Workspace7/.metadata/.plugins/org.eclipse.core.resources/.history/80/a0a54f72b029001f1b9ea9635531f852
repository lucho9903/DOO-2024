package co.edu.uco.deviucopay.crosscutting.exceptions.messageCatalog.impl;
import java.util.HashMap;
import java.util.Map;

import co.edu.uco.deviucopay.crosscutting.exceptions.customs.CrossCuttingDeviUcopayException;
import co.edu.uco.deviucopay.crosscutting.exceptions.messageCatalog.MessageCatalog;
import co.edu.uco.deviucopay.crosscutting.exceptions.messageCatalog.data.CodigoMensaje;
import co.edu.uco.deviucopay.crosscutting.exceptions.messageCatalog.data.Mensaje;
import co.edu.uco.deviucopay.crosscutting.helpers.ObjectHelper;

public class MessageCatalogBase implements MessageCatalog {


	private final Map<String, Mensaje> mensajes= new HashMap<>();
	
	@Override
	public final void inicializar() {mensajes.put(CodigoMensaje.M00001.getIdentificador(), new Mensaje(CodigoMensaje.M00001,
			"El código del mensaje que quiere obtener del catálogo mensajes llegó nulo..."));
	mensajes.put(CodigoMensaje.M00002.getIdentificador(), new Mensaje(CodigoMensaje.M00002,
			"Se ha presentado un problema tratando de llevar a cabo la operación deseada..."));
	mensajes.put(CodigoMensaje.M00003.getIdentificador(), new Mensaje(CodigoMensaje.M00003,
			"El identificador del mensaje \"${1}\" que se intentó obtener, no está en el catálogo de mensajes base..."));
	mensajes.put(CodigoMensaje.M00004.getIdentificador(), new Mensaje(CodigoMensaje.M00004,
			"El mensaje con identificador \"${1}\" que se intentó obtener, no está configurado para residir en el catálogo de mensajes base..."));
	mensajes.put(CodigoMensaje.M00005.getIdentificador(), new Mensaje(CodigoMensaje.M00005,
			"El mensaje con identificador \"${1}\" que se intentó obtener, no está configurado para residir en el catálogo de mensajes externo..."));
	mensajes.put(CodigoMensaje.M00006.getIdentificador(), new Mensaje(CodigoMensaje.M00006,
			"El identificador del mensaje \"${1}\" que se intentó obtener, no está en el catálogo de mensajes externo..."));

	mensajes.put(CodigoMensaje.M00007.getIdentificador(), new Mensaje(CodigoMensaje.M00007,
			"Se ha presentado un problema tratando de obtener la conexión con la base de datos PostgreSQL. Por favor revise la traza de errores para identificar y solucionar el problema...\""));
	mensajes.put(CodigoMensaje.M00008.getIdentificador(), new Mensaje(CodigoMensaje.M00008,
			"Se ha presentado un problema INESPERADO tratando de validar si la conexión SQL con la fuente de información deseada estaba cerrada..."));
	mensajes.put(CodigoMensaje.M00009.getIdentificador(), new Mensaje(CodigoMensaje.M00009,
			"Se ha intentado realizar el cierre de una conexión SQL que ya estaba cerrada..."));
	mensajes.put(CodigoMensaje.M00010.getIdentificador(), new Mensaje(CodigoMensaje.M00010,
			"Se ha presentado un problema tratando de cerrar la conexión SQL con la fuente de información deseada..."));
	mensajes.put(CodigoMensaje.M00011.getIdentificador(), new Mensaje(CodigoMensaje.M00011,
			"Se ha presentado un problema INESPERADO tratando de cerrar la conexión SQL con la fuente de información deseada..."));
	mensajes.put(CodigoMensaje.M00012.getIdentificador(), new Mensaje(CodigoMensaje.M00012,
			"Se ha intentado confirmar una transacción con una conexión SQL cerrada..."));
	mensajes.put(CodigoMensaje.M00013.getIdentificador(), new Mensaje(CodigoMensaje.M00013,
			"Se ha intentado confirmar una transacción cuando el autocommit de la conexión con la base de datos estaba activado..."));
	mensajes.put(CodigoMensaje.M00014.getIdentificador(), new Mensaje(CodigoMensaje.M00014,
			"Se ha presentado un problema tratando de confirmar una transacción SQL con la fuente de información deseada..."));
	mensajes.put(CodigoMensaje.M00015.getIdentificador(), new Mensaje(CodigoMensaje.M00015,
			"Se ha presentado un problema INESPERADO tratando de confirmar una transacción SQL con la fuente de información deseada..."));
	mensajes.put(CodigoMensaje.M00016.getIdentificador(), new Mensaje(CodigoMensaje.M00016,
			"Se ha intentado cancelar una transacción con una conexión SQL cerrada..."));
	mensajes.put(CodigoMensaje.M00017.getIdentificador(), new Mensaje(CodigoMensaje.M00017,
			"Se ha intentado cancelar una transacción cuando el autocommit de la conexión con la base de datos estaba activado..."));
	mensajes.put(CodigoMensaje.M00018.getIdentificador(), new Mensaje(CodigoMensaje.M00018,
			"Se ha presentado un problema tratando de cancelar una transacción SQL con la fuente de información deseada..."));
	mensajes.put(CodigoMensaje.M00019.getIdentificador(), new Mensaje(CodigoMensaje.M00019,
			"Se ha presentado un problema INESPERADO tratando de cancelar una transacción SQL con la fuente de información deseada..."));

	mensajes.put(CodigoMensaje.M00020.getIdentificador(), new Mensaje(CodigoMensaje.M00020,
			"Se ha intentado iniciar una transacción con una conexión SQL cerrada..."));
	mensajes.put(CodigoMensaje.M00021.getIdentificador(), new Mensaje(CodigoMensaje.M00021,
			"Se ha presentado un problema tratando de iniciar una transacción SQL con la fuente de información deseada..."));
	mensajes.put(CodigoMensaje.M00022.getIdentificador(), new Mensaje(CodigoMensaje.M00022,
			"Se ha presentado un problema INESPERADO tratando de iniciar una transacción SQL con la fuente de información deseada..."));
	mensajes.put(CodigoMensaje.M00023.getIdentificador(), new Mensaje(CodigoMensaje.M00023,
			"Se ha presentado un problema tratando de consultar la informacion del afiliado"));
	mensajes.put(CodigoMensaje.M00024.getIdentificador(), new Mensaje(CodigoMensaje.M00024,
			"Se ha presentado un problema INESPERADO tratando de consultar la informacion del afiliado"));
	mensajes.put(CodigoMensaje.M00025.getIdentificador(), new Mensaje(CodigoMensaje.M00025,
			"Se ha presentado un problema tratando de consultar la informacion del carnet"));
	mensajes.put(CodigoMensaje.M00026.getIdentificador(), new Mensaje(CodigoMensaje.M00026,
			"Se ha presentado un problema INESPERADO tratando de consultar la informacion del carnet"));
	mensajes.put(CodigoMensaje.M00027.getIdentificador(), new Mensaje(CodigoMensaje.M00027,
			"Se ha presentado un problema al consultar la información de los tipos de institucion"));
	mensajes.put(CodigoMensaje.M00028.getIdentificador(), new Mensaje(CodigoMensaje.M00028,
			"Se ha presentado un problema INESPERADO tratando de consultar la informacion de los tipos de institucion"));
	mensajes.put(CodigoMensaje.M00029.getIdentificador(), new Mensaje(CodigoMensaje.M00029,
			"Se ha presentado un problema consultar la informacion de los tipo de identificacion"));
	mensajes.put(CodigoMensaje.M00030.getIdentificador(), new Mensaje(CodigoMensaje.M00030,
			"Se ha presentado un problema INESPERADO tratando de consultar la informacion de los tipos de identificacion"));
	mensajes.put(CodigoMensaje.M00031.getIdentificador(), new Mensaje(CodigoMensaje.M00031,
			"Se ha presentado un problema tratando de llevar a cabo la consulta de los carnets..."));
	mensajes.put(CodigoMensaje.M00032.getIdentificador(), new Mensaje(CodigoMensaje.M00032,
			"Se ha presentado un problema al consultar la informacion de las cuentas"));
	mensajes.put(CodigoMensaje.M00033.getIdentificador(), new Mensaje(CodigoMensaje.M00033,
			"Se ha presentado un problema INESPERADO tratando de consultar las cunetas"));
	mensajes.put(CodigoMensaje.M00034.getIdentificador(), new Mensaje(CodigoMensaje.M00034,
			"Se ha presentado un problema tratando de llevar a cabo la consulta de los afiliados..."));
	mensajes.put(CodigoMensaje.M00035.getIdentificador(), new Mensaje(CodigoMensaje.M00035,
			"El dao factory para consultar llego nulo..."));
	mensajes.put(CodigoMensaje.M00036.getIdentificador(), new Mensaje(CodigoMensaje.M00036,
			"Número de cuenta o PIN incorrecto"));
	mensajes.put(CodigoMensaje.M00037.getIdentificador(), new Mensaje(CodigoMensaje.M00037,
			"Se ha presentado un problema modificando la cuenta"));
	mensajes.put(CodigoMensaje.M00038.getIdentificador(), new Mensaje(CodigoMensaje.M00038,
			"Se ha presentado un problema inesperado tratando de modificar la cuenta"));
	mensajes.put(CodigoMensaje.M00039.getIdentificador(),
			new Mensaje(CodigoMensaje.M00039, "Se ha presentado un problema tratando de registrar la informacion de la cuenta"));
	mensajes.put(CodigoMensaje.M00040.getIdentificador(),
			new Mensaje(CodigoMensaje.M00040, "Se ha presentado un problema INESPERADO tratando de registrar la informacion de la  cuenta"));
	mensajes.put(CodigoMensaje.M00041.getIdentificador(),
			new Mensaje(CodigoMensaje.M00041,"Se ha presentado un problema tratando de llevar a cabo la consulta de las cuentas..."));
	mensajes.put(CodigoMensaje.M00042.getIdentificador(),
			new Mensaje(CodigoMensaje.M00042, "Se ha presentado un problema tratando de llevar a cabo la consulta de las Cuentas"));
	mensajes.put(CodigoMensaje.M00043.getIdentificador(),
			new Mensaje(CodigoMensaje.M00043,  "Se ha presentado un problema tratando de llevar a cabo la consulta de los Institucioness..."));
	mensajes.put(CodigoMensaje.M00044.getIdentificador(),
			new Mensaje(CodigoMensaje.M00044, "El DAOFactory para crear  llegó nulo..."));
	mensajes.put(CodigoMensaje.M00045.getIdentificador(), new Mensaje(CodigoMensaje.M00045,
			"Se ha presentado un problema tratando de llevar a cabo la consulta de las instituciones"));
	mensajes.put(CodigoMensaje.M00046.getIdentificador(),
			new Mensaje(CodigoMensaje.M00046, "Se ha presentado un problema tratando de llevar a cabo la consulta de los tipos de cuentas..."));
	mensajes.put(CodigoMensaje.M00047.getIdentificador(),
			new Mensaje(CodigoMensaje.M00047, "Se ha presentado un problema tratando de llevar a cabo la consulta de los tipos de identificacion..."));
	mensajes.put(CodigoMensaje.M00048.getIdentificador(), new Mensaje(CodigoMensaje.M00048,
			"Se ha presentado un problema tratando de llevar a cabo la consulta de los tipos de institucion..."));
	mensajes.put(CodigoMensaje.M00049.getIdentificador(), new Mensaje(CodigoMensaje.M00049,
			"Se ha presentado una SQLException tratando de realizar la consulta de los departamentos en la tabla \"Departamento\" de la base de datos."));
	mensajes.put(CodigoMensaje.M00050.getIdentificador(), new Mensaje(CodigoMensaje.M00050,
			"Afiliados consultados exitosamente."));
	mensajes.put(CodigoMensaje.M00051.getIdentificador(), new Mensaje(CodigoMensaje.M00051,
			"Se ha presentado un error tratando de consultar la informacion"));
	mensajes.put(CodigoMensaje.M00052.getIdentificador(), new Mensaje(CodigoMensaje.M00052,
			"carnets consultados exitosamente."));
	mensajes.put(CodigoMensaje.M00053.getIdentificador(), new Mensaje(CodigoMensaje.M00053,
			"Cuentas Consultadas Exitosamente"));
	mensajes.put(CodigoMensaje.M00054.getIdentificador(), new Mensaje(CodigoMensaje.M00054,
			"Cuenta creada exitosamente"));
	mensajes.put(CodigoMensaje.M00055.getIdentificador(), new Mensaje(CodigoMensaje.M00055,
			"Se ha presentado un problema tratando de crear la nueva cuenta"));
	mensajes.put(CodigoMensaje.M00056.getIdentificador(), new Mensaje(CodigoMensaje.M00056,
			"Login exitoso"));
	mensajes.put(CodigoMensaje.M00057.getIdentificador(),
			new Mensaje(CodigoMensaje.M00057, "El capo Nombre Institucion no puede estar vacio"));
	mensajes.put(CodigoMensaje.M00058.getIdentificador(),
			new Mensaje(CodigoMensaje.M00058, "El campo Correo no puede estar vacio"));
	mensajes.put(CodigoMensaje.M00059.getIdentificador(),
			new Mensaje(CodigoMensaje.M00059, "El formato del correo \"${1}\" no es valido"));
	mensajes.put(CodigoMensaje.M00060.getIdentificador(), new Mensaje(CodigoMensaje.M00060,
			"El correo \"${1}\" ya esta asignado para otra institucion, por favor intenta con otro"));
	mensajes.put(CodigoMensaje.M00061.getIdentificador(),
			new Mensaje(CodigoMensaje.M00061, "El nombre \"${1}\" ya esta asignado para otra institucion, por favor intenta con otro"));
	mensajes.put(CodigoMensaje.M00062.getIdentificador(), new Mensaje(CodigoMensaje.M00062,
			" El numero de cuenta\"${1}\" ya esta asignado para otra cuenta, por favor intenta con otro"));
	mensajes.put(CodigoMensaje.M00063.getIdentificador(),
			new Mensaje(CodigoMensaje.M00063, "Se ha presentado un problema durante el login"));
	mensajes.put(CodigoMensaje.M00064.getIdentificador(), new Mensaje(CodigoMensaje.M00064,
			"Instituciones consultadas exitosamente"));
	mensajes.put(CodigoMensaje.M00065.getIdentificador(),
			new Mensaje(CodigoMensaje.M00065, "El nombre \"${1}\" para la institucion es demasiado corto"));
	mensajes.put(CodigoMensaje.M00066.getIdentificador(),
			new Mensaje(CodigoMensaje.M00066, "El nombre de la institucion es demasiado largo"));
	mensajes.put(CodigoMensaje.M00067.getIdentificador(),
			new Mensaje(CodigoMensaje.M00067, "Institucion creada exitosamente"));
	mensajes.put(CodigoMensaje.M00068.getIdentificador(),
			new Mensaje(CodigoMensaje.M00068, "Se ha presentado un problema tratando de registar la nueva Institucion"));
	mensajes.put(CodigoMensaje.M00069.getIdentificador(),
			new Mensaje(CodigoMensaje.M00069,"Se ha presentado un problema al consultar la información de las instituciones."));
	mensajes.put(CodigoMensaje.M00070.getIdentificador(),
			new Mensaje(CodigoMensaje.M00070,"Se ha presentado un problema INESPERADO tratando de consultar las  instituciones."));
	mensajes.put(CodigoMensaje.M00071.getIdentificador(),
			new Mensaje(CodigoMensaje.M00071,"Se ha presentado un problema INESPERADO tratando de consultar las instituciones."));
	mensajes.put(CodigoMensaje.M00072.getIdentificador(),
			new Mensaje(CodigoMensaje.M00072,"Tipo cuentas consultados exitosamente."));
	mensajes.put(CodigoMensaje.M00073.getIdentificador(),
			new Mensaje(CodigoMensaje.M00073,"Tipo identificaciones consultados exitosamente."));
	mensajes.put(CodigoMensaje.M00074.getIdentificador(),
			new Mensaje(CodigoMensaje.M00074,"Tipo Instituciones consultados exitosamente."));
	mensajes.put(CodigoMensaje.M00075.getIdentificador(),
			new Mensaje(CodigoMensaje.M00075,"No es posible crer el DAO deseado con una conexion cerrada"));
	mensajes.put(CodigoMensaje.M00076.getIdentificador(),
			new Mensaje(CodigoMensaje.M00076,"Se ha presentado un problema INESPERADO tratando de consultar las instituciones."));
	mensajes.put(CodigoMensaje.M00077.getIdentificador(),
			new Mensaje(CodigoMensaje.M00077,"El saldo inicial debe ser 0."));
	mensajes.put(CodigoMensaje.M00078.getIdentificador(),
			new Mensaje(CodigoMensaje.M00078,"El pin debe contener exactamente 4 dígitos."));
	mensajes.put(CodigoMensaje.M00079.getIdentificador(),
			new Mensaje(CodigoMensaje.M00079,"El pin no puede estar vacío."));
	mensajes.put(CodigoMensaje.M00080.getIdentificador(),
			new Mensaje(CodigoMensaje.M00080,"El afiliado no está registrado en la institución."));
	mensajes.put(CodigoMensaje.M00081.getIdentificador(), new Mensaje(CodigoMensaje.M00081,
			"Se ha presentado un problema consultar la informacion."));
	mensajes.put(CodigoMensaje.M00082.getIdentificador(), new Mensaje(CodigoMensaje.M00082,
			"El correo \"${1}\" ya esta asignado para otra institucion, por favor intenta con otro"));
	mensajes.put(CodigoMensaje.M00083.getIdentificador(), new Mensaje(CodigoMensaje.M00083,
			"El correo \"${1}\" ya esta asignado para otra institucion, por favor intenta con otro"));
	mensajes.put(CodigoMensaje.M00084.getIdentificador(), new Mensaje(CodigoMensaje.M00084,
			"El correo \"${1}\" ya esta asignado para otra institucion, por favor intenta con otro"));
	mensajes.put(CodigoMensaje.M00085.getIdentificador(), new Mensaje(CodigoMensaje.M00085,
			"El correo \"${1}\" ya esta asignado para otra institucion, por favor intenta con otro"));
	mensajes.put(CodigoMensaje.M00086.getIdentificador(), new Mensaje(CodigoMensaje.M00086,
			"El correo \"${1}\" ya esta asignado para otra institucion, por favor intenta con otro"));
	mensajes.put(CodigoMensaje.M00087.getIdentificador(), new Mensaje(CodigoMensaje.M00087,
			"El correo \"${1}\" ya esta asignado para otra institucion, por favor intenta con otro"));
	mensajes.put(CodigoMensaje.M00088.getIdentificador(), new Mensaje(CodigoMensaje.M00088,
			"El correo \"${1}\" ya esta asignado para otra institucion, por favor intenta con otro"));
	mensajes.put(CodigoMensaje.M00089.getIdentificador(), new Mensaje(CodigoMensaje.M00089,
			"El correo \"${1}\" ya esta asignado para otra institucion, por favor intenta con otro"));
	mensajes.put(CodigoMensaje.M00090.getIdentificador(), new Mensaje(CodigoMensaje.M00090,
			"El correo \"${1}\" ya esta asignado para otra institucion, por favor intenta con otro"));
	
			
	}

	@Override
	public final String obtenerContendidoMensaje(final CodigoMensaje codigo, String... parametros) {
		return obtenerMensaje(codigo, parametros).getContenido();
	}

	@Override
	public final Mensaje obtenerMensaje(final CodigoMensaje codigo, String... parametros) {
		if (ObjectHelper.getObjectHelper().isNull(codigo)) {
			var mensajeUsuario=obtenerContendidoMensaje(CodigoMensaje.M00002);
			var mensajeTecnico=obtenerContendidoMensaje(CodigoMensaje.M00001);
			throw new CrossCuttingDeviUcopayException(mensajeTecnico, mensajeUsuario);
		}
		if (!codigo.isBase()) {
			var mensajeUsuario=obtenerContendidoMensaje(CodigoMensaje.M00002);
			var mensajeTecnico=obtenerContendidoMensaje(CodigoMensaje.M00004, codigo.getIdentificador());
			throw new CrossCuttingDeviUcopayException(mensajeTecnico, mensajeUsuario);
		}
		if (!mensajes.containsKey(codigo.getIdentificador())) {
			var mensajeUsuario=obtenerContendidoMensaje(CodigoMensaje.M00002);
			var mensajeTecnico=obtenerContendidoMensaje(CodigoMensaje.M00003, codigo.getIdentificador());
			throw new CrossCuttingDeviUcopayException(mensajeTecnico, mensajeUsuario);
		}
		
		
		
		return mensajes.get(codigo.getIdentificador());
	}

}